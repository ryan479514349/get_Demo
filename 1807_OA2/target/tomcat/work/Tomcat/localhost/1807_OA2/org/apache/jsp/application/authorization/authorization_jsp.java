/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-12-14 09:05:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.application.authorization;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class authorization_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("     \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<base href=\"");
      out.print(request.getContextPath()+"/");
      out.write("\">\r\n");
      out.write("<meta name=\"renderer\" content=\"webkit|ie-comp|ie-stand\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\" />\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\r\n");
      out.write("<LINK rel=\"Bookmark\" href=\"/favicon.ico\" >\r\n");
      out.write("<LINK rel=\"Shortcut Icon\" href=\"/favicon.ico\" />\r\n");
      out.write("<link href=\"css/H-ui.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<link href=\"css/H-ui.admin.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<link href=\"css/style.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<link href=\"lib/Hui-iconfont/1.0.1/iconfont.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"lib/zTree/v3/css/zTreeStyle/zTreeStyle.css\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("<title>管理员列表</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<nav class=\"breadcrumb\"><i class=\"Hui-iconfont\">&#xe67f;</i> 首页 <span class=\"c-gray en\">&gt;</span> 管理员管理 <span class=\"c-gray en\">&gt;</span> 管理员列表 <a class=\"btn btn-success radius r mr-20\" style=\"line-height:1.6em;margin-top:3px\" href=\"javascript:location.replace(location.href);\" title=\"刷新\" ><i class=\"Hui-iconfont\">&#xe68f;</i></a></nav>\r\n");
      out.write("<div class=\"pd-20\">\r\n");
      out.write("\t\t<div class=\"text-c\">\r\n");
      out.write("\t\t\t\t<div class=\"row cl \">\r\n");
      out.write("\t\t\t\t\t<label class=\"form-label col-1\">角色：</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"formControls col-1\"> <span class=\"select-box\" style=\"width:150px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<select class=\"select\" id=\"query_role_id\" size=\"1\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"\">请选择</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t</span> \r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<label class=\"form-label col-5\">类型：</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"formControls col-5\" style=\"left: -300px;\">\r\n");
      out.write("\t\t\t\t\t\t <span class=\"select-box\" style=\"width:150px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<select class=\"select\" id=\"query_type\" size=\"1\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"\">请选择</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"1\">人员</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"0\">菜单</option>\r\n");
      out.write("\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t</span> \r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"row cl\">\r\n");
      out.write("\t\t\t\t\t<div class=\"cl pd-5\">\r\n");
      out.write("\t\t\t\t\t\t<button onclick=\"queryauthorization()\" type=\"button\" class=\"btn btn-success radius\" id=\"\" name=\"\">\r\n");
      out.write("\t\t\t\t\t\t\t<i class=\"Hui-iconfont\">&#xe665;</i> 搜索\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t<button type=\"reset\" onclick=\"javascript:location.replace(location.href)\" class=\"btn btn-success radius\" id=\"\" name=\"\">\r\n");
      out.write("\t\t\t\t\t\t\t<i class=\"Hui-iconfont\">&#xe66b;</i> 重置\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t<div class=\"cl pd-5 bg-1 bk-gray mt-20\"> \r\n");
      out.write("\t\t<span class=\"l\">\r\n");
      out.write("\t\t\t<a href=\"javascript:;\" onclick=\"authorizationUser()\" class=\"btn btn-primary radius\">\r\n");
      out.write("\t\t\t\t<i class=\"Hui-iconfont\">&#xe600;</i> 授权人员\r\n");
      out.write("\t\t\t</a> \r\n");
      out.write("\t\t\t<a href=\"javascript:;\" onclick=\"authorizationMenu()\" class=\"btn btn-primary radius\">\r\n");
      out.write("\t\t\t\t<i class=\"Hui-iconfont\">&#xe600;</i> 授权菜单\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</a> \t\t\r\n");
      out.write("\t\t</span> \r\n");
      out.write("\t</div>\r\n");
      out.write("\t<table class=\"table table-border table-bordered table-bg\" id=\"authorizationTable\">\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/jquery/1.9.1/jquery.min.js\"></script>  \r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/layer/1.9.3/layer.js\"></script> \r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/laypage/1.2/laypage.js\"></script> \r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/My97DatePicker/WdatePicker.js\"></script> \r\n");
      out.write("<script type=\"text/javascript\" src=\"js/H-ui.js\"></script> \r\n");
      out.write("<script type=\"text/javascript\" src=\"js/H-ui.admin.js\"></script> \r\n");
      out.write("<script type=\"text/javascript\" src=\"js/oa_utils.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/zTree/v3/js/jquery.ztree.core-3.5.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/zTree/v3/js/jquery.ztree.excheck-3.5.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function getSelectRoleId(){\r\n");
      out.write("\t// 1.判断用户是否选择角色\r\n");
      out.write("\tvar roleId = $(\"#query_role_id\").val();\r\n");
      out.write("\tif(roleId == \"\"){\r\n");
      out.write("\t\talert(\"请先选择角色\");\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\treturn roleId;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function queryauthorization(){\r\n");
      out.write("\r\n");
      out.write("\tvar roleId = getSelectRoleId();\r\n");
      out.write("\t\r\n");
      out.write("\tif(!roleId){\r\n");
      out.write("\t\treturn ;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tvar queryType=$(\"#query_type\").val();\r\n");
      out.write("\t\r\n");
      out.write("\t// 2.判断用户查询的类型\r\n");
      out.write("\tif(queryType == \"1\"){ // 查询人员\r\n");
      out.write("\t\t$(\"#authorizationTable\").load(\"authorizationController/getUserListByRoleId/\"+roleId);\r\n");
      out.write("\t}else if(queryType == \"0\"){ // 查询菜单\r\n");
      out.write("\t\t$(\"#authorizationTable\").load(\"authorizationController/getMenuListByRoleId/\"+roleId);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function authorizationUser(){\r\n");
      out.write("\t//获取角色是否被选择\r\n");
      out.write("\tvar roleId = getSelectRoleId();\r\n");
      out.write("\tif(!roleId){\r\n");
      out.write("\t\treturn ;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tlayer_show(\"授权用户\",\"authorizationController/findNoRoleIdUserList/\"+roleId,\"800\",\"400\");\r\n");
      out.write("}\r\n");
      out.write("function authorizationMenu(){\r\n");
      out.write("\t//获取角色是否被选择\r\n");
      out.write("\tvar roleId = getSelectRoleId();\r\n");
      out.write("\tif(!roleId){\r\n");
      out.write("\t\treturn ;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// 1.首先弹一格框\r\n");
      out.write("\tlayer.open({\r\n");
      out.write("\t\t  type: 1,\r\n");
      out.write("\t\t  title: false,\r\n");
      out.write("\t\t  area: ['300px', '300px'],\r\n");
      out.write("\t\t  closeBtn: 1,\r\n");
      out.write("\t\t  shadeClose: true,\r\n");
      out.write("\t\t  skin: 'yourclass',\r\n");
      out.write("\t\t  content: htmlString1(\"授权菜单\")\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// 2.初始化树\r\n");
      out.write("\t var setting = {   \r\n");
      out.write("\r\n");
      out.write("\t check: {\r\n");
      out.write("\t\t\tenable: true,\r\n");
      out.write("\t\t\tchkStyle: \"checkbox\",\r\n");
      out.write("\t\t\tchkboxType: { \"Y\": \"ps\", \"N\": \"ps\" }\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\t\t\r\n");
      out.write("       data: {    \r\n");
      out.write("           simpleData: {    \r\n");
      out.write("               enable: true  //使用简单 Array格式的数据 \r\n");
      out.write("           }    \r\n");
      out.write("       },\r\n");
      out.write("       async: {    \r\n");
      out.write("           enable: true, //开启异步加载处理   \r\n");
      out.write("           url:\"authorizationController/getMenuTreeByParentId/\"+roleId,    \r\n");
      out.write("           autoParam:[\"id\"],   // 传递的参数  \r\n");
      out.write("           dataType: \"json\",//默认text  \r\n");
      out.write("           type:\"get\"//请求的方式\r\n");
      out.write("       }\r\n");
      out.write("   };    \r\n");
      out.write("\t     \r\n");
      out.write("    // 初始化的树\r\n");
      out.write("    var  zTreeObj = $.fn.zTree.init($(\"#QueryTree\"), setting); \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//表单的HTML代码\r\n");
      out.write("function htmlString1(treeTitle){\r\n");
      out.write("\tvar htmlStr = \"\";\r\n");
      out.write("\t\thtmlStr += '<div style=\"width:300px;height:200px\" >';\r\n");
      out.write("\t\thtmlStr += '<div style=\" line-height:30px; text-indent:10px; margin-bottom:20px; background-color:#eee; position:relative;\">'+treeTitle+'</div>';\r\n");
      out.write("\t\thtmlStr += '<div style=\"display:block; padding-bottom:5px;\" align=\"center\"  >';\r\n");
      out.write("\t\thtmlStr += '<div style=\"padding-bottom:5px\"><table><tr><td><input type=\"hidden\" id=\"tmp_Id\"/><input type=\"text\" id=\"tmp_Name\" width=\"50px\"><button onclick=\"getTreeNode();\">确定</button></td></tr></table></div>';\r\n");
      out.write("\t\thtmlStr += '<div id=\"QueryTree\" class=\"ztree\"></div>';\r\n");
      out.write("\t\thtmlStr += '</div>';\r\n");
      out.write("\t\thtmlStr += '</div>';\r\n");
      out.write("\treturn htmlStr;\r\n");
      out.write("}\r\n");
      out.write("//确定提交\r\n");
      out.write("function getTreeNode(){\r\n");
      out.write("\t\tdebugger\r\n");
      out.write("\t  var treeObj=$.fn.zTree.getZTreeObj(\"QueryTree\"),\r\n");
      out.write("      nodes=treeObj.getCheckedNodes(true);\r\n");
      out.write("      var menuIds =new Array();\r\n");
      out.write("      for(var i=0;i<nodes.length;i++){\r\n");
      out.write("    \t  menuIds[i]=nodes[i].id\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      //获取角色id\r\n");
      out.write("      var roleId = $(\"#query_role_id\").val();\r\n");
      out.write("      //定义一个参数对象装数组\r\n");
      out.write("      var param =new Object;\r\n");
      out.write("      //将数数据放入对象中\r\n");
      out.write("      param.menuIds=menuIds;\r\n");
      out.write("    //  param.roleId=roleId;\r\n");
      out.write("      \r\n");
      out.write("      $.post(\"authorizationController/updateAuthorizationMenu/\"+roleId,param,function(data){\r\n");
      out.write("    \t \r\n");
      out.write("    \t  //操作成功失败提示框\r\n");
      out.write("    \t  responseMessage(data)\r\n");
      out.write("      },\"json\")\r\n");
      out.write("      //获取当前框\r\n");
      out.write("       var index =\tlayer.index\r\n");
      out.write("\t\t//关闭当前框\r\n");
      out.write("       layer.close(index)\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /application/authorization/authorization.jsp(33,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/application/authorization/authorization.jsp(33,8) '${roleAll}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${roleAll}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /application/authorization/authorization.jsp(33,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("role");
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<option value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${role.roleId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write('"');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${role.roleName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("</option>\r\n");
          out.write("\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    }
    return false;
  }
}
